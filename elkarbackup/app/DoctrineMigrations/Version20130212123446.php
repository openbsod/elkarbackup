<?php
/**
 * @copyright 2012,2013 Binovo it Human Project, S.L.
 * @license http://www.opensource.org/licenses/bsd-license.php New-BSD
 */

namespace Application\Migrations;

use Doctrine\DBAL\Migrations\AbstractMigration,
    Doctrine\DBAL\Schema\Schema;
use Binovo\ElkarBackupBundle\Lib\Globals;

/**
 * Auto-generated Migration: Please modify to your need!
 */
class Version20130212123446 extends AbstractMigration
{
    public function up(Schema $schema)
    {
        // this up() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "mysql");

        $scripts = scandir(Globals::getUploadDir());
        $this->abortIf(false == $scripts);

        $this->addSql("CREATE TABLE Script (id INT AUTO_INCREMENT NOT NULL, description LONGTEXT DEFAULT NULL, name VARCHAR(255) NOT NULL, isClientPre TINYINT(1) NOT NULL, isJobPre TINYINT(1) NOT NULL, isClientPost TINYINT(1) NOT NULL, isJobPost TINYINT(1) NOT NULL, UNIQUE INDEX UNIQ_1B2D820C5E237E06 (name), PRIMARY KEY(id)) ENGINE = InnoDB");
        $this->addSql("ALTER TABLE Client ADD postScript_id INT DEFAULT NULL, ADD preScript_id INT DEFAULT NULL, DROP postScript, DROP preScript");
        $this->addSql("ALTER TABLE Client ADD CONSTRAINT FK_C0E80163B21C5632 FOREIGN KEY (postScript_id) REFERENCES Script (id)");
        $this->addSql("ALTER TABLE Client ADD CONSTRAINT FK_C0E80163B27EDC0 FOREIGN KEY (preScript_id) REFERENCES Script (id)");
        $this->addSql("CREATE INDEX IDX_C0E80163B21C5632 ON Client (postScript_id)");
        $this->addSql("CREATE INDEX IDX_C0E80163B27EDC0 ON Client (preScript_id)");
        $this->addSql("ALTER TABLE Job ADD postScript_id INT DEFAULT NULL, ADD preScript_id INT DEFAULT NULL, DROP postScript, DROP preScript");
        $this->addSql("ALTER TABLE Job ADD CONSTRAINT FK_C395A618B21C5632 FOREIGN KEY (postScript_id) REFERENCES Script (id)");
        $this->addSql("ALTER TABLE Job ADD CONSTRAINT FK_C395A618B27EDC0 FOREIGN KEY (preScript_id) REFERENCES Script (id)");
        $this->addSql("CREATE INDEX IDX_C395A618B21C5632 ON Job (postScript_id)");
        $this->addSql("CREATE INDEX IDX_C395A618B27EDC0 ON Job (preScript_id)");

        $idScript = 1;
        foreach ($scripts as $script) {
            $matches = array();
            if (preg_match('/^([0-9]{4})(?:_([0-9]{4}))?[.](pre|post)$/', $script, $matches)) {
                list($name, $clientId, $jobId, $preOrPost) = $matches;
                $clientId = (int)$clientId;
                $isPost   = $preOrPost == 'post';
                $isPre    = $preOrPost == 'pre';
                $jobId    = $jobId ? (int)$jobId : null;
                $isClientPost = !$jobId && $isPost ? 1 : 0;
                $isClientPre  = !$jobId && $isPre  ? 1 : 0;
                $isJobPost    =  $jobId && $isPost ? 1 : 0;
                $isJobPre     =  $jobId && $isPre  ? 1 : 0;
                $this->addSql("INSERT IGNORE INTO Script (id, description, name, isClientPre, isJobPre, isClientPost, isJobPost) VALUES ($idScript, '', '$name', $isClientPre, $isJobPre, $isClientPost, $isJobPost)");
                if ($isClientPost) {
                    $this->addSql("UPDATE Client SET postScript_id = $idScript WHERE id = $clientId");
                }
                if ($isClientPre) {
                    $this->addSql("UPDATE Client SET preScript_id = $idScript WHERE id = $clientId");
                }
                if ($isJobPost) {
                    $this->addSql("UPDATE Job SET postScript_id = $idScript WHERE id = $jobId");
                }
                if ($isJobPre) {
                    $this->addSql("UPDATE Job SET preScript_id = $idScript WHERE id = $jobId");
                }
                ++$idScript;
                copy(sprintf('%s/%s', Globals::getUploadDir(), $name), sprintf('%s/%04d.script', Globals::getUploadDir(), $idScript));
                chmod(sprintf('%s/%04d.script', Globals::getUploadDir(), $idScript), 0755);
            }
        }
    }

    public function down(Schema $schema)
    {
        // this down() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "mysql");

        $this->addSql("ALTER TABLE Client DROP FOREIGN KEY FK_C0E80163B21C5632");
        $this->addSql("ALTER TABLE Client DROP FOREIGN KEY FK_C0E80163B27EDC0");
        $this->addSql("ALTER TABLE Job DROP FOREIGN KEY FK_C395A618B21C5632");
        $this->addSql("ALTER TABLE Job DROP FOREIGN KEY FK_C395A618B27EDC0");
        $this->addSql("DROP TABLE Script");
        $this->addSql("ALTER TABLE Client DROP FOREIGN KEY FK_C0E80163B21C5632");
        $this->addSql("ALTER TABLE Client DROP FOREIGN KEY FK_C0E80163B27EDC0");
        $this->addSql("DROP INDEX IDX_C0E80163B21C5632 ON Client");
        $this->addSql("DROP INDEX IDX_C0E80163B27EDC0 ON Client");
        $this->addSql("ALTER TABLE Client ADD postScript LONGTEXT DEFAULT NULL, ADD preScript LONGTEXT DEFAULT NULL, DROP postScript_id, DROP preScript_id");
        $this->addSql("ALTER TABLE Job DROP FOREIGN KEY FK_C395A618B21C5632");
        $this->addSql("ALTER TABLE Job DROP FOREIGN KEY FK_C395A618B27EDC0");
        $this->addSql("DROP INDEX IDX_C395A618B21C5632 ON Job");
        $this->addSql("DROP INDEX IDX_C395A618B27EDC0 ON Job");
        $this->addSql("ALTER TABLE Job ADD postScript LONGTEXT DEFAULT NULL, ADD preScript LONGTEXT DEFAULT NULL, DROP postScript_id, DROP preScript_id");
    }
}
