<?php

namespace Proxies\__CG__\Binovo\ElkarBackupBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Script extends \Binovo\ElkarBackupBundle\Entity\Script implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'description', 'id', 'name', 'deleteScriptFile', 'scriptFile', 'filesToRemove', 'isClientPre', 'isJobPre', 'isClientPost', 'isJobPost', 'lastUpdated', 'postClients', 'postJobs', 'preClients', 'preJobs');
        }

        return array('__isInitialized__', 'description', 'id', 'name', 'deleteScriptFile', 'scriptFile', 'filesToRemove', 'isClientPre', 'isJobPre', 'isClientPost', 'isJobPost', 'lastUpdated', 'postClients', 'postJobs', 'preClients', 'preJobs');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Script $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function upload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'upload', array());

        return parent::upload();
    }

    /**
     * {@inheritDoc}
     */
    public function prepareRemoveUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prepareRemoveUpload', array());

        return parent::prepareRemoveUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function removeUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUpload', array());

        return parent::removeUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function getScriptPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScriptPath', array());

        return parent::getScriptPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getScriptDirectory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScriptDirectory', array());

        return parent::getScriptDirectory();
    }

    /**
     * {@inheritDoc}
     */
    public function getScriptName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScriptName', array());

        return parent::getScriptName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setScriptFile($scriptFile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScriptFile', array($scriptFile));

        return parent::setScriptFile($scriptFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getScriptFileExists()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScriptFileExists', array());

        return parent::getScriptFileExists();
    }

    /**
     * {@inheritDoc}
     */
    public function getScriptFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScriptFile', array());

        return parent::getScriptFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsClientPre($isClientPre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsClientPre', array($isClientPre));

        return parent::setIsClientPre($isClientPre);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsClientPre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsClientPre', array());

        return parent::getIsClientPre();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsJobPre($isJobPre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsJobPre', array($isJobPre));

        return parent::setIsJobPre($isJobPre);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsJobPre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsJobPre', array());

        return parent::getIsJobPre();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsClientPost($isClientPost)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsClientPost', array($isClientPost));

        return parent::setIsClientPost($isClientPost);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsClientPost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsClientPost', array());

        return parent::getIsClientPost();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsJobPost($isJobPost)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsJobPost', array($isJobPost));

        return parent::setIsJobPost($isJobPost);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsJobPost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsJobPost', array());

        return parent::getIsJobPost();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastUpdated($lastUpdated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastUpdated', array($lastUpdated));

        return parent::setLastUpdated($lastUpdated);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastUpdated', array());

        return parent::getLastUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function addPostClient(\Binovo\ElkarBackupBundle\Entity\Client $postClients)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPostClient', array($postClients));

        return parent::addPostClient($postClients);
    }

    /**
     * {@inheritDoc}
     */
    public function removePostClient(\Binovo\ElkarBackupBundle\Entity\Client $postClients)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePostClient', array($postClients));

        return parent::removePostClient($postClients);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostClients()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostClients', array());

        return parent::getPostClients();
    }

    /**
     * {@inheritDoc}
     */
    public function addPostJob(\Binovo\ElkarBackupBundle\Entity\Job $postJobs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPostJob', array($postJobs));

        return parent::addPostJob($postJobs);
    }

    /**
     * {@inheritDoc}
     */
    public function removePostJob(\Binovo\ElkarBackupBundle\Entity\Job $postJobs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePostJob', array($postJobs));

        return parent::removePostJob($postJobs);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostJobs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostJobs', array());

        return parent::getPostJobs();
    }

    /**
     * {@inheritDoc}
     */
    public function addPreClient(\Binovo\ElkarBackupBundle\Entity\Client $preClients)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPreClient', array($preClients));

        return parent::addPreClient($preClients);
    }

    /**
     * {@inheritDoc}
     */
    public function removePreClient(\Binovo\ElkarBackupBundle\Entity\Client $preClients)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePreClient', array($preClients));

        return parent::removePreClient($preClients);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreClients()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreClients', array());

        return parent::getPreClients();
    }

    /**
     * {@inheritDoc}
     */
    public function addPreJob(\Binovo\ElkarBackupBundle\Entity\Job $preJobs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPreJob', array($preJobs));

        return parent::addPreJob($preJobs);
    }

    /**
     * {@inheritDoc}
     */
    public function removePreJob(\Binovo\ElkarBackupBundle\Entity\Job $preJobs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePreJob', array($preJobs));

        return parent::removePreJob($preJobs);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreJobs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreJobs', array());

        return parent::getPreJobs();
    }

    /**
     * {@inheritDoc}
     */
    public function isUsed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUsed', array());

        return parent::isUsed();
    }

}
